/*
Deployment script for SampleDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SampleDb"
:setvar DefaultFilePrefix "SampleDb"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER01\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER01\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[DailyReports]...';


GO
CREATE TABLE [dbo].[DailyReports] (
    [Id]             INT        IDENTITY (1, 1) NOT NULL,
    [SupplierId]     INT        NOT NULL,
    [Quantity]       FLOAT (53) NULL,
    [Percentage]     REAL       NULL,
    [Price]          REAL       NULL,
    [CreateDateTime] DATETIME   NOT NULL,
    [UpdateDateTime] DATETIME   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PriceRatings]...';


GO
CREATE TABLE [dbo].[PriceRatings] (
    [Id]         INT  IDENTITY (1, 1) NOT NULL,
    [LowerBound] INT  NULL,
    [UpperBound] INT  NULL,
    [Price]      REAL NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Stations]...';


GO
CREATE TABLE [dbo].[Stations] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [StationCode]    VARCHAR (50)  NULL,
    [Name]           VARCHAR (100) NULL,
    [Address]        VARCHAR (150) NULL,
    [MobileNumber]   VARCHAR (15)  NULL,
    [IsActive]       BIT           NULL,
    [PostCode]       VARCHAR (50)  NULL,
    [CreateDateTime] DATETIME      NOT NULL,
    [UpdateDateTime] DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Suppliers]...';


GO
CREATE TABLE [dbo].[Suppliers] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [StationId]      INT           NOT NULL,
    [UserId]         INT           NULL,
    [LogNumber]      VARCHAR (50)  NULL,
    [FirstName]      VARCHAR (50)  NULL,
    [LastName]       VARCHAR (50)  NULL,
    [Address]        VARCHAR (150) NULL,
    [MobileNumber]   VARCHAR (15)  NULL,
    [CreateDateTime] DATETIME      NOT NULL,
    [UpdateDateTime] DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [UserName]       NVARCHAR (100) NULL,
    [Email]          NVARCHAR (50)  NULL,
    [Password]       NVARCHAR (250) NULL,
    [IsActive]       BIT            NULL,
    [CreateDateTime] DATETIME       NOT NULL,
    [UpdateDateTime] DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[DailyReports]...';


GO
ALTER TABLE [dbo].[DailyReports]
    ADD DEFAULT 0 FOR [Quantity];


GO
PRINT N'Creating unnamed constraint on [dbo].[DailyReports]...';


GO
ALTER TABLE [dbo].[DailyReports]
    ADD DEFAULT 0 FOR [Percentage];


GO
PRINT N'Creating unnamed constraint on [dbo].[DailyReports]...';


GO
ALTER TABLE [dbo].[DailyReports]
    ADD DEFAULT 0 FOR [Price];


GO
PRINT N'Creating [dbo].[FK_dbo.DailyReports_dbo.Suppliers_SupplierId]...';


GO
ALTER TABLE [dbo].[DailyReports] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.DailyReports_dbo.Suppliers_SupplierId] FOREIGN KEY ([SupplierId]) REFERENCES [dbo].[Suppliers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.Stations_StationId]...';


GO
ALTER TABLE [dbo].[Suppliers] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.Stations_StationId] FOREIGN KEY ([StationId]) REFERENCES [dbo].[Stations] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.Users_UserId]...';


GO
ALTER TABLE [dbo].[Suppliers] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([Id]);


GO
PRINT N'Creating [dbo].[Usp_AddDailyReport]...';


GO
CREATE PROCEDURE Usp_AddDailyReport
(
@Id int,
@SupplierId int,
@Quantity real,
@Percentage real,
@Price real
)
AS
BEGIN
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
IF(@Id = 0)
BEGIN
INSERT INTO DailyReports VALUES(@SupplierId, @Quantity, @Percentage, @Price, GETDATE(), NULL)
END
ELSE
BEGIN
UPDATE DailyReports SET SupplierId = @SupplierId, Quantity = @Quantity, [Percentage] = @Percentage, Price = @Price, UpdateDateTime = GETDATE() WHERE Id = @Id
END
END
GO
PRINT N'Creating [dbo].[USP_GetDailyReports]...';


GO
CREATE PROCEDURE USP_GetDailyReports
(
 @Date DATETIME
)
AS
BEGIN
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
BEGIN TRY
SELECT dr.Id, SupplierId, sp.LogNumber, (sp.FirstName + ' ' + sp.LastName) as SupplierName, Quantity, Price, [Percentage], DR.CreateDateTime, DR.UpdateDateTime  FROM DailyReports dr
join Suppliers as sp on sp.Id = dr.SupplierId
 where DR.CreateDateTime = @Date
END TRY
   BEGIN CATCH        
        SELECT ERROR_NUMBER() AS ErrorNumber,
               ERROR_SEVERITY() AS ErrorSeverity,
               ERROR_STATE() AS ErrorState,
               ERROR_PROCEDURE() AS ErrorProcedure,
               ERROR_LINE() AS ErrorLine,
               ERROR_MESSAGE() AS ErrorMessage
    END CATCH
END
GO
PRINT N'Creating [dbo].[USP_GetStationsList]...';


GO
CREATE PROCEDURE [dbo].[USP_GetStationsList]

AS
BEGIN
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
BEGIN TRY
SELECT * FROM Stations
END TRY
   BEGIN CATCH        
        SELECT ERROR_NUMBER() AS ErrorNumber,
               ERROR_SEVERITY() AS ErrorSeverity,
               ERROR_STATE() AS ErrorState,
               ERROR_PROCEDURE() AS ErrorProcedure,
               ERROR_LINE() AS ErrorLine,
               ERROR_MESSAGE() AS ErrorMessage
    END CATCH
END
GO
PRINT N'Creating [dbo].[USP_GetSuppliers]...';


GO
CREATE PROCEDURE USP_GetSuppliers
(
 @StationId INT
)
AS
BEGIN
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
BEGIN TRY
SELECT Id, FirstName, LastName, [Address], MobileNumber  FROM Suppliers where StationId = @StationId
END TRY
   BEGIN CATCH        
        SELECT ERROR_NUMBER() AS ErrorNumber,
               ERROR_SEVERITY() AS ErrorSeverity,
               ERROR_STATE() AS ErrorState,
               ERROR_PROCEDURE() AS ErrorProcedure,
               ERROR_LINE() AS ErrorLine,
               ERROR_MESSAGE() AS ErrorMessage
    END CATCH
END
GO
PRINT N'Creating [dbo].[USP_GetUserDetails]...';


GO
CREATE PROCEDURE USP_GetUserDetails
(
 @UserName nvarchar(50),
 @Password nvarchar(250)
)
AS
BEGIN
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
BEGIN TRY
SELECT * from [users] where Email = @UserName and [Password] = @Password
END TRY
   BEGIN CATCH        
        SELECT ERROR_NUMBER() AS ErrorNumber,
               ERROR_SEVERITY() AS ErrorSeverity,
               ERROR_STATE() AS ErrorState,
               ERROR_PROCEDURE() AS ErrorProcedure,
               ERROR_LINE() AS ErrorLine,
               ERROR_MESSAGE() AS ErrorMessage
    END CATCH
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[DailyReports] WITH CHECK CHECK CONSTRAINT [FK_dbo.DailyReports_dbo.Suppliers_SupplierId];

ALTER TABLE [dbo].[Suppliers] WITH CHECK CHECK CONSTRAINT [FK_dbo.Stations_StationId];

ALTER TABLE [dbo].[Suppliers] WITH CHECK CHECK CONSTRAINT [FK_dbo.Users_UserId];


GO
PRINT N'Update complete.';


GO
